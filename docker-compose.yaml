version: '3.6'
services:
  postgres:
    container_name: pizzastack_pg
    image: postgres:12
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    container_name: pizzastack_hasura
    image: hasura/graphql-engine:v2.9.0
    ports:
      - '8080:8080'
    depends_on:
      - 'postgres'
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'false' # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      # HASURA_GRAPHQL_UNAUTHORIZED_ROLE: guest
      # HASURA_GRAPHQL_JWT_SECRET: '{"type": "HS256", "key": "2sJ63Qo39XeE0HHtTe0MfLmM2ojZGwhQ"}'
      # HASURA_ACTIONS_ENDPOINT: http://host.docker.internal:8888/.netlify/functions
      # HASURA_PIZZASTACK_SECRET: mypizzastacksecretkey
      # HASURA_FAKE_ORDER_FORCE_CREATE: 'true'
      # HASURA_EVENT_WEBHOOK_HANDLER: 'http://host.docker.internal:8888/.netlify/functions/hasura-webhook'
volumes:
  db_data: